# Generated by Django 3.0.2 on 2020-02-03 08:47

from django.db import migrations, models
import django.db.models.deletion
import logs.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        ('basicinfo', '0001_initial'),
        ('instruments', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='ManageLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('station_state', models.BooleanField(default=True, verbose_name='查台时运行状态')),
                ('is_restore', models.BooleanField(default=True, verbose_name='是否恢复正常')),
                ('manage_time', models.DateTimeField(verbose_name='管理台站的时间')),
                ('order', logs.fields.OrderField(blank=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('station', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='basicinfo.Station', verbose_name='管理的台站')),
            ],
            options={
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='Record',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_id', models.PositiveIntegerField()),
                ('order', logs.fields.OrderField(blank=True)),
                ('content_type', models.ForeignKey(limit_choices_to={'model__in': ('ChangedLocation', 'ChangedSeismicInstrument', 'ChangedDisk', 'ManualCollectedData')}, on_delete=django.db.models.deletion.CASCADE, to='contenttypes.ContentType')),
                ('manage_log', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='logs.ManageLog')),
            ],
            options={
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='ManualCollectedData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('changed', models.DateTimeField()),
                ('is_last', models.BooleanField(default=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('disk1_used', models.FloatField(default=0.0, verbose_name='卡1')),
                ('disk2_used', models.FloatField(default=0.0, verbose_name='卡2')),
                ('station', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='manualcollecteddata_related', to='basicinfo.Station', verbose_name='所属台站')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ChangedSeismicInstrument',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('changed', models.DateTimeField()),
                ('is_last', models.BooleanField(default=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('seismic_instruments', models.ManyToManyField(related_name='by_used_histories', to='instruments.SeismicInstrumentEntity', verbose_name='更换测震仪器记录')),
                ('station', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='changedseismicinstrument_related', to='basicinfo.Station', verbose_name='所属台站')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ChangedOtherInstrument',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('changed', models.DateTimeField()),
                ('is_last', models.BooleanField(default=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('quantity', models.PositiveIntegerField(default=1, verbose_name='数量')),
                ('instruments', models.ManyToManyField(limit_choices_to={'has_sn': False}, related_name='by_used_histories', to='instruments.InstrumentModel', verbose_name='更换仪器记录')),
                ('station', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='changedotherinstrument_related', to='basicinfo.Station', verbose_name='所属台站')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ChangedLocation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('changed', models.DateTimeField()),
                ('is_last', models.BooleanField(default=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('latitude', models.FloatField(default=0.0, verbose_name='纬度')),
                ('longitude', models.FloatField(default=0.0, verbose_name='经度')),
                ('altitude', models.FloatField(default=0.0, verbose_name='高程')),
                ('station', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='changedlocation_related', to='basicinfo.Station', verbose_name='所属台站')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ChangedDisk',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('changed', models.DateTimeField()),
                ('is_last', models.BooleanField(default=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('disk1_size', models.FloatField(default=0.0, verbose_name='卡1')),
                ('disk2_size', models.FloatField(default=0.0, verbose_name='卡2')),
                ('station', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='changeddisk_related', to='basicinfo.Station', verbose_name='所属台站')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
