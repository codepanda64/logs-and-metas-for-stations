# Generated by Django 3.0.2 on 2020-02-24 03:45

from django.db import migrations, models
import django.db.models.deletion
import mptt.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('basicinfo', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True, verbose_name='部门名称')),
                ('address', models.CharField(blank=True, max_length=200, verbose_name='地址')),
                ('remark', models.TextField(blank=True, verbose_name='备注')),
            ],
            options={
                'verbose_name': '部门',
                'verbose_name_plural': '部门',
            },
        ),
        migrations.CreateModel(
            name='Instrument',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='设备名称')),
                ('brand', models.CharField(blank=True, max_length=50, verbose_name='品牌')),
                ('manufacturer', models.CharField(blank=True, max_length=50, verbose_name='厂商')),
                ('is_model', models.BooleanField(default=False)),
                ('param', models.CharField(blank=True, max_length=200, verbose_name='参数描述')),
                ('total', models.PositiveIntegerField(default=1, verbose_name='总数')),
            ],
            options={
                'verbose_name': '设备模型信息',
                'verbose_name_plural': '设备模型信息',
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='InstrumentItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(default=1, verbose_name='数量')),
                ('instrument', models.ForeignKey(limit_choices_to={'is_model': False}, on_delete=django.db.models.deletion.CASCADE, to='instruments.Instrument', verbose_name='仪器型号')),
                ('station', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='basicinfo.Station')),
            ],
            options={
                'verbose_name': '仪器信息',
                'verbose_name_plural': '仪器信息',
            },
        ),
        migrations.CreateModel(
            name='InstrumentEntity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sn', models.CharField(max_length=50, unique=True, verbose_name='设备序号')),
                ('status', models.CharField(choices=[('online', '在线'), ('fault', '故障'), ('in_warehouse', '库存'), ('quarantine', '待检'), ('returned', '已归还'), ('unknow', '未知')], default='in_warehouse', max_length=50, verbose_name='状态')),
                ('belong', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='instruments.Department', verbose_name='所属单位')),
                ('by_used', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='seismic_instruments', to='basicinfo.Station', verbose_name='使用台站')),
                ('instrument_model', models.ForeignKey(limit_choices_to={'is_model': True}, on_delete=django.db.models.deletion.CASCADE, related_name='instrument_entities', to='instruments.Instrument', verbose_name='设备型号')),
            ],
            options={
                'verbose_name': '测震设备实体',
                'verbose_name_plural': '测震设备实体',
                'ordering': ('sn',),
            },
        ),
        migrations.CreateModel(
            name='InstrumentCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True, verbose_name='分类名称')),
                ('lft', models.PositiveIntegerField(editable=False)),
                ('rght', models.PositiveIntegerField(editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('mptt_level', models.PositiveIntegerField(editable=False)),
                ('parent', mptt.fields.TreeForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='instruments.InstrumentCategory', verbose_name='上级分类')),
            ],
            options={
                'verbose_name': '设备分类',
                'verbose_name_plural': '设备分类',
            },
        ),
        migrations.AddField(
            model_name='instrument',
            name='category',
            field=mptt.fields.TreeForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='instruments', to='instruments.InstrumentCategory', verbose_name='所属分类'),
        ),
        migrations.AlterUniqueTogether(
            name='instrument',
            unique_together={('name', 'param')},
        ),
    ]
